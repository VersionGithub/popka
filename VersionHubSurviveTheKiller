--secure by moon sec V3
local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v81=0;while true do if (v81==0) then v19=v0(v3(v30,1,1));return "";end end else local v82=v2(v0(v30,16));if v19 then local v92=v5(v82,v19);v19=nil;return v92;else return v82;end end end);local function v20(v31,v32,v33) if v33 then local v83=(v31/(((5 + 0) -3)^(v32-(2 -1))))%((3 -1)^(((v33-(2 -1)) -(v32-(620 -(555 + 64)))) + (932 -(857 + (105 -31))))) ;return v83-(v83%(569 -(367 + 201))) ;else local v84=(1992 -(68 + 997)) -(214 + 713) ;local v85;while true do if (v84==(0 + 0)) then v85=(1 + 1)^(v32-((2148 -(226 + 1044)) -(282 + 595))) ;return (((v31%(v85 + v85))>=v85) and (1638 -(1523 + 114))) or 0 ;end end end end local function v21() local v34=0 -0 ;local v35;while true do if (v34==1) then return v35;end if (v34==(117 -(32 + 85))) then v35=v1(v16,v18,v18);v18=v18 + (958 -(892 + 65)) + 0 ;v34=1 + 0 ;end end end local function v22() local v36,v37=v1(v16,v18,v18 + (4 -2) );v18=v18 + (3 -1) ;return (v37 * (469 -213)) + v36 ;end local function v23() local v38=(1302 -(802 + 150)) -(87 + 263) ;local v39;local v40;local v41;local v42;while true do if (0==v38) then v39,v40,v41,v42=v1(v16,v18,v18 + (183 -(67 + (303 -190))) );v18=v18 + 4 ;v38=1 + 0 ;end if (((3 -1) -(1 + 0))==v38) then return (v42 * 16777216) + (v41 * (48199 + 17337)) + (v40 * (1017 -761)) + v39 ;end end end local function v24() local v43=v23();local v44=v23();local v45=(2484 -(998 + 488)) -(915 + 82) ;local v46=(v20(v44,2 -1 ,12 + 8 ) * (((774 -(201 + 571)) -0)^(1219 -(1069 + 118)))) + v43 ;local v47=v20(v44,21,70 -39 );local v48=((v20(v44,11 + 21 )==(1 -0)) and  -1) or (1 + 0) ;if (v47==(0 -0)) then if (v46==(0 + 0)) then return v48 * (791 -(302 + 66 + 423)) ;else local v93=0;while true do if (v93==(0 -0)) then v47=19 -(10 + 8) ;v45=0 -0 ;break;end end end elseif (v47==(2489 -(416 + 26))) then return ((v46==((0 -0) -0)) and (v48 * ((1 + 0)/0))) or (v48 * NaN) ;end return v8(v48,v47-(1809 -786) ) * (v45 + (v46/((440 -(145 + 293))^(482 -(44 + 386))))) ;end local function v25(v49) local v50;if  not v49 then v49=v23();if (v49==(0 + 0)) then return "";end end v50=v3(v16,v18,(v18 + v49) -(860 -(814 + 45)) );v18=v18 + v49 ;local v51={};for v65=3 -2 , #v50 do v51[v65]=v2(v1(v3(v50,v65,v65)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return 0 -0 ;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();while true do if (v52== #",") then local v88=(function() return 0 + 0 ;end)();local v89=(function() return;end)();while true do if (v88==(0 -0)) then v89=(function() return 0 -0 ;end)();while true do if (v89==0) then v57=(function() return v23();end)();v58=(function() return {};end)();v89=(function() return 1701 -(1419 + 281) ;end)();end if (v89==1) then for v109= #"|",v57 do local v110=(function() return 0;end)();local v111=(function() return;end)();local v112=(function() return;end)();local v113=(function() return;end)();while true do if (v110~=1) then else v113=(function() return nil;end)();while true do if (v111== #"\\") then if (v112== #"\\") then v113=(function() return v21()~=(0 -0) ;end)();elseif (v112==2) then v113=(function() return v24();end)();elseif (v112~= #"asd") then else v113=(function() return v25();end)();end v58[v109]=(function() return v113;end)();break;end if (v111~=(74 -(71 + 3))) then else local v123=(function() return 0 + 0 ;end)();local v124=(function() return;end)();while true do if (v123==0) then v124=(function() return 0 -0 ;end)();while true do if (1==v124) then v111=(function() return  #",";end)();break;end if (v124~=(0 -0)) then else v112=(function() return v21();end)();v113=(function() return nil;end)();v124=(function() return 1;end)();end end break;end end end end break;end if (v110==(241 -(187 + 54))) then v111=(function() return 780 -(162 + 618) ;end)();v112=(function() return nil;end)();v110=(function() return 1 + 0 ;end)();end end end v56[ #"asd"]=(function() return v21();end)();v89=(function() return 2 + 0 ;end)();end if ((3 -1)==v89) then v52=(function() return 2 -0 ;end)();break;end end break;end end end if ((1 + 1)~=v52) then else for v94= #"}",v23() do local v95=(function() return 1636 -(1373 + 263) ;end)();local v96=(function() return;end)();local v97=(function() return;end)();while true do if (v95==(1001 -(451 + 549))) then while true do if (0~=v96) then else v97=(function() return v21();end)();if (v20(v97, #"~", #".")==0) then local v114=(function() return 0 + 0 ;end)();local v115=(function() return;end)();local v116=(function() return;end)();local v117=(function() return;end)();while true do if (v114==2) then if (v20(v116, #"{", #"}")~= #",") then else v117[2 -0 ]=(function() return v58[v117[2 -0 ]];end)();end if (v20(v116,1386 -(746 + 638) ,1 + 1 )== #"\\") then v117[ #"19("]=(function() return v58[v117[ #"19("]];end)();end v114=(function() return 3;end)();end if (v114~=(4 -1)) then else if (v20(v116, #"xxx", #"xnx")~= #"/") then else v117[ #"0836"]=(function() return v58[v117[ #"?id="]];end)();end v53[v94]=(function() return v117;end)();break;end if (1==v114) then local v119=(function() return 341 -(218 + 123) ;end)();while true do if (v119==(1582 -(1535 + 46))) then v114=(function() return 2 + 0 ;end)();break;end if (v119==(0 + 0)) then v117=(function() return {v22(),v22(),nil,nil};end)();if (v115==(560 -(306 + 254))) then local v296=(function() return 0 + 0 ;end)();local v297=(function() return;end)();while true do if ((0 -0)~=v296) then else v297=(function() return 0;end)();while true do if (v297==(1467 -(899 + 568))) then v117[ #"91("]=(function() return v22();end)();v117[ #"?id="]=(function() return v22();end)();break;end end break;end end elseif (v115== #"[") then v117[ #"19("]=(function() return v23();end)();elseif (v115==2) then v117[ #"xxx"]=(function() return v23() -(2^16) ;end)();elseif (v115~= #"xnx") then else local v379=(function() return 0 + 0 ;end)();local v380=(function() return;end)();while true do if (v379~=(0 -0)) then else v380=(function() return 0;end)();while true do if (v380==(603 -(268 + 335))) then v117[ #"-19"]=(function() return v23() -(2^(306 -(60 + 230))) ;end)();v117[ #"0836"]=(function() return v22();end)();break;end end break;end end end v119=(function() return 573 -(426 + 146) ;end)();end end end if (v114==(0 + 0)) then local v120=(function() return 1456 -(282 + 1174) ;end)();local v121=(function() return;end)();while true do if (v120==(811 -(569 + 242))) then v121=(function() return 0 -0 ;end)();while true do if (v121~=(1 + 0)) then else v114=(function() return 1025 -(706 + 318) ;end)();break;end if (v121~=0) then else v115=(function() return v20(v97,1253 -(721 + 530) , #"asd");end)();v116=(function() return v20(v97, #".dev",1277 -(945 + 326) );end)();v121=(function() return 2 -1 ;end)();end end break;end end end end end break;end end break;end if (v95==(0 + 0)) then local v106=(function() return 700 -(271 + 429) ;end)();local v107=(function() return;end)();while true do if (v106==0) then v107=(function() return 0 + 0 ;end)();while true do if (v107==(1501 -(1408 + 92))) then v95=(function() return 1087 -(461 + 625) ;end)();break;end if (v107~=(1288 -(993 + 295))) then else v96=(function() return 0;end)();v97=(function() return nil;end)();v107=(function() return 1;end)();end end break;end end end end end for v98= #"!",v23() do v54[v98-#"|" ]=(function() return v28();end)();end return v56;end if (v52~=0) then else local v90=(function() return 0;end)();local v91=(function() return;end)();while true do if (v90==(0 + 0)) then v91=(function() return 1171 -(418 + 753) ;end)();while true do if (v91==2) then v52=(function() return  #"|";end)();break;end if (v91~=1) then else v55=(function() return {};end)();v56=(function() return {v53,v54,nil,v55};end)();v91=(function() return 2;end)();end if (v91==(0 + 0)) then v53=(function() return {};end)();v54=(function() return {};end)();v91=(function() return 1 + 0 ;end)();end end break;end end end end end local function v29(v59,v60,v61) local v62=v59[1 + 0 ];local v63=v59[531 -(406 + 123) ];local v64=v59[1772 -(1749 + 20) ];return function(...) local v67=v62;local v68=v63;local v69=v64;local v70=v27;local v71=(1807 -(1202 + 604)) + 0 ;local v72= -(1323 -(1249 + 73));local v73={};local v74={...};local v75=v12("#",...) -(1 + 0) ;local v76={};local v77={};for v86=1145 -(466 + 679) ,v75 do if ((v86>=v69) or (1228>2702)) then v73[v86-v69 ]=v74[v86 + (2 -1) ];else v77[v86]=v74[v86 + (2 -(4 -3)) ];end end local v78=(v75-v69) + (1901 -(106 + (2985 -1191))) ;local v79;local v80;while true do local v87=0 + 0 ;while true do if (v87==0) then v79=v67[v71];v80=v79[1 + 0 ];v87=2 -1 ;end if (v87==1) then if ((825==825) and (v80<=(89 -56))) then if (v80<=(44 -28)) then if (v80<=(121 -(4 + 110))) then if (v80<=(587 -(57 + 527))) then if ((v80<=(1428 -(41 + 1386))) or (3455==177)) then if (v80>(103 -(17 + 86))) then local v128=v79[2 + 0 ];local v129=v77[v79[6 -3 ]];v77[v128 + (2 -1) ]=v129;v77[v128]=v129[v79[(495 -(45 + 280)) -(122 + 44) ]];elseif (v79[2 -0 ]==v77[v79[4]]) then v71=v71 + (3 -2) ;else v71=v79[3 + 0 ];end elseif ((v80>(1 + 1)) or (243==4615)) then v77[v79[3 -1 ]][v79[68 -(30 + 35) ]]=v79[4];else v77[v79[2 + 0 ]][v79[1260 -(1043 + 214) ]]=v77[v79[15 -11 ]];end elseif (v80<=5) then if ((271<1117) and (v80==(1216 -(323 + 889)))) then local v137=(0 + 0) -0 ;local v138;while true do if (v137==(580 -(361 + 219))) then v138=v79[(282 + 40) -(53 + 267) ];v77[v138]=v77[v138](v13(v77,v138 + 1 + 0 ,v79[3]));break;end end else v77[v79[(152 + 263) -(15 + 398) ]]={};end elseif (v80==(988 -(18 + 964))) then if v77[v79[7 -5 ]] then v71=v71 + 1 + 0 ;else v71=v79[2 + 1 ];end else v77[v79[852 -(20 + 830) ]]();end elseif ((2739==2739) and (v80<=11)) then if (v80<=(8 + 1)) then if (v80>(5 + 3)) then local v140=v79[128 -(116 + 10) ];local v141,v142=v70(v77[v140](v77[v140 + 1 + 0 ]));v72=(v142 + v140) -(739 -(542 + 196)) ;local v143=0;for v233=v140,v72 do v143=v143 + 1 ;v77[v233]=v141[v143];end else v77[v79[3 -1 ]]=v79[3];end elseif ((v80==10) or (23==1134)) then local v146=v79[1 + 1 + 0 ];local v147=v79[3 + 1 ];local v148=v146 + 1 + 1 ;local v149={v77[v146](v77[v146 + (2 -1) ],v77[v148])};for v236=1552 -((2084 -958) + 425) ,v147 do v77[v148 + v236 ]=v149[v236];end local v150=v149[406 -(118 + 287) ];if v150 then local v269=0 -0 ;while true do if ((v269==(1121 -(118 + 1003))) or (2693>=4111)) then v77[v148]=v150;v71=v79[8 -5 ];break;end end else v71=v71 + ((2289 -(340 + 1571)) -(57 + 85 + 235)) ;end else v77[v79[9 -7 ]]=v60[v79[1 + 2 ]];end elseif (v80<=(990 -(553 + 424))) then if (v80>(22 -(1782 -(1733 + 39)))) then v71=v79[3 + 0 ];else v77[v79[(5 -3) + 0 ]]();end elseif ((v80<=(9 + 5)) or (4316<=2146)) then local v154=0 + (1034 -(125 + 909)) ;local v155;local v156;while true do if ((v154==(0 + 0)) or (3546<=2809)) then v155=v79[2];v156=v77[v79[6 -3 ]];v154=1;end if (v154==1) then v77[v155 + (2 -1) ]=v156;v77[v155]=v156[v79[8 -4 ]];break;end end elseif ((4904>2166) and (v80>(5 + 10))) then v77[v79[9 -7 ]]=v61[v79[(2704 -(1096 + 852)) -(239 + 231 + 283) ]];else v77[v79[1 + 1 ]]={};end elseif ((109>=90) and (v80<=(1353 -(797 + 532)))) then if ((4978>2905) and (v80<=(15 + 5))) then if (v80<=(7 + 11)) then if ((v80>(39 -22)) or (3026<=2280)) then v77[v79[1204 -(373 + 829) ]]=v79[734 -(476 + 255) ]~=(1130 -(369 + 761)) ;else local v158=v79[2 + 0 ];local v159,v160=v70(v77[v158](v13(v77,v158 + 1 ,v79[5 -2 ])));v72=(v160 + v158) -(1 -0) ;local v161=238 -(64 + 174) ;for v239=v158,v72 do v161=v161 + 1 + 0 ;v77[v239]=v159[v161];end end elseif ((v80>(27 -8)) or (1653<=1108)) then if (v77[v79[338 -((205 -61) + 192) ]]==v79[4]) then v71=v71 + (217 -(42 + 174)) ;else v71=v79[3 + 0 ];end elseif ((2909>2609) and v77[v79[2 + 0 ]]) then v71=v71 + 1 ;else v71=v79[2 + 1 ];end elseif (v80<=(1526 -(363 + 1141))) then if ((757>194) and (v80>(1601 -(1183 + 397)))) then v77[v79[(5 + 0) -3 ]]=v60[v79[3 + 0 ]];else v77[v79[2 + 0 ]][v79[1978 -(1913 + 62) ]]=v79[3 + 1 ];end elseif (v80>(60 -37)) then v77[v79[(2447 -(409 + 103)) -(565 + 1368) ]]=v77[v79[11 -8 ]][v79[4]];else v77[v79[1663 -(1477 + 184) ]]=v79[3 -0 ];end elseif ((v80<=(27 + 1)) or (31>=1398)) then if ((3196<=4872) and (v80<=(882 -(564 + 292)))) then if ((3326==3326) and (v80==(42 -17))) then local v170=0 -0 ;local v171;while true do if (v170==(304 -(244 + 60))) then v171=v79[2];v77[v171](v77[v171 + 1 ]);break;end end else v77[v79[2 + 0 ]]=v29(v68[v79[479 -(41 + 435) ]],nil,v61);end elseif (v80==(1028 -(938 + (299 -(46 + 190))))) then local v173=v79[2 + 0 ];local v174=v79[1129 -(936 + 189) ];local v175=v173 + 1 + 1 ;local v176={v77[v173](v77[v173 + (1614 -(1565 + 48)) ],v77[v175])};for v242=1 + 0 ,v174 do v77[v175 + v242 ]=v176[v242];end local v177=v176[1139 -(782 + 356) ];if ((1433<=3878) and v177) then local v275=267 -(176 + 91) ;while true do if (v275==(0 -(95 -(51 + 44)))) then v77[v175]=v177;v71=v79[4 -1 ];break;end end else v71=v71 + (1093 -(975 + 33 + 84)) ;end else v77[v79[1877 -((1474 -(1114 + 203)) + 1718) ]]=v61[v79[3]];end elseif ((v80<=(25 + (731 -(228 + 498)))) or (1583==1735)) then if (v80==(102 -73)) then if  not v77[v79[(2 + 4) -4 ]] then v71=v71 + 1 ;else v71=v79[3];end elseif  not v77[v79[2 + 0 ]] then v71=v71 + ((1682 -(174 + 489)) -(697 + 321)) ;else v71=v79[7 -(10 -6) ];end elseif (v80<=(65 -34)) then local v180=0;local v181;local v182;local v183;while true do if (v180==2) then for v322=2 -1 ,v79[2 + 2 ] do v71=v71 + ((1906 -(830 + 1075)) -0) ;local v323=v67[v71];if (v323[2 -(525 -(303 + 221)) ]==56) then v183[v322-(1228 -(322 + 905)) ]={v77,v323[875 -(826 + 46) ]};else v183[v322-(1 + 0) ]={v60,v323[1 + 2 ]};end v76[ #v76 + 1 ]=v183;end v77[v79[2]]=v29(v181,v182,v61);break;end if (v180==0) then v181=v68[v79[1901 -((1422 -(171 + 991)) + 1638) ]];v182=nil;v180=441 -(382 + 58) ;end if (v180==(3 -2)) then v183={};v182=v10({},{__index=function(v325,v326) local v327=0 + 0 ;local v328;while true do if (v327==(0 -0)) then v328=v183[v326];return v328[2 -1 ][v328[1207 -(902 + 303) ]];end end end,__newindex=function(v329,v330,v331) local v332=v183[v330];v332[1 -0 ][v332[4 -2 ]]=v331;end});v180=2;end end elseif ((v80==(3 + 29)) or (2981==2350)) then v77[v79[2]]=v77[v79[3]];else v60[v79[1693 -(1121 + 569) ]]=v77[v79[216 -(22 + 192) ]];end elseif ((v80<=(733 -(483 + 200))) or (4466<=493)) then if ((v80<=(1504 -(1404 + 59))) or (2547<=1987)) then if ((2961>2740) and (v80<=(101 -(159 -95)))) then if (v80<=35) then if (v80>(44 -10)) then v61[v79[768 -(468 + 297) ]]=v77[v79[564 -(334 + 228) ]];else local v186=v79[6 -4 ];v77[v186]=v77[v186](v13(v77,v186 + 1 ,v79[6 -3 ]));end elseif ((3696>=3612) and (v80==(64 -28))) then local v188=0 + 0 ;local v189;local v190;while true do if ((236 -(141 + 95))==v188) then v189=v79[2 + 0 ];v190={};v188=2 -1 ;end if ((v188==(2 -1)) or (2970==1878)) then for v334=1, #v76 do local v335=v76[v334];for v350=0 + 0 , #v335 do local v351=0 -0 ;local v352;local v353;local v354;while true do if (v351==(0 + 0)) then v352=v335[v350];v353=v352[1 + 0 ];v351=1 -0 ;end if (v351==(1 + 0 + 0)) then v354=v352[165 -(92 + 71) ];if (((v353==v77) and (v354>=v189)) or (3693<1977)) then local v381=0 + 0 ;while true do if (v381==0) then v190[v354]=v353[v354];v352[1]=v190;break;end end end break;end end end end break;end end elseif (v77[v79[2 -0 ]]~=v79[769 -(574 + 191) ]) then v71=v71 + 1 + 0 ;else v71=v79[7 -4 ];end elseif ((v80<=(20 + 19)) or (930>2101)) then if (v80==((3109 -2222) -((732 -478) + (959 -364)))) then if ((4153>3086) and (v77[v79[2]]==v79[4])) then v71=v71 + (127 -(55 + 71)) ;else v71=v79[3 -0 ];end else local v191=v79[1792 -(573 + 1217) ];local v192={};for v245=1, #v76 do local v246=0;local v247;while true do if (v246==(0 -(0 -0))) then v247=v76[v245];for v355=0 + 0 , #v247 do local v356=0;local v357;local v358;local v359;while true do if (v356==(1 -0)) then v359=v357[941 -(714 + 225) ];if ((v358==v77) and (v359>=v191)) then local v382=0 -0 ;while true do if (v382==(0 -0)) then v192[v359]=v358[v359];v357[1 + (1248 -(111 + 1137)) ]=v192;break;end end end break;end if (v356==(158 -(91 + 67))) then v357=v247[v355];v358=v357[1 -(0 -0) ];v356=1;end end end break;end end end end elseif (v80==40) then local v193=(202 + 604) -((641 -(423 + 100)) + 688) ;local v194;local v195;local v196;local v197;while true do if ((v193==1) or (4654<=4050)) then v72=(v196 + v194) -(49 -(25 + 23)) ;v197=0 + 0 ;v193=1888 -(7 + 920 + 959) ;end if ((v193==(0 -0)) or (2602<1496)) then v194=v79[734 -(16 + 716) ];v195,v196=v70(v77[v194](v13(v77,v194 + (1 -(0 -0)) ,v79[100 -(11 + 86) ])));v193=(2 + 0) -1 ;end if (v193==(287 -(175 + 110))) then for v337=v194,v72 do v197=v197 + (2 -(772 -(326 + 445))) ;v77[v337]=v195[v197];end break;end end else v60[v79[14 -11 ]]=v77[v79[1798 -(503 + 1293) ]];end elseif (v80<=(125 -80)) then if (v80<=43) then if (v80==((135 -104) + 11)) then local v200=0;local v201;while true do if ((1061 -(810 + 251))==v200) then v201=v79[2 + (0 -0) ];v77[v201]=v77[v201]();break;end end else v77[v79[1 + 1 ]]=v79[3]~=(0 + 0) ;end elseif ((v80>(577 -(43 + 490))) or (1020>2288)) then local v203=733 -(711 + 22) ;local v204;local v205;local v206;local v207;while true do if (v203==1) then v72=(v206 + v204) -((6 -3) -2) ;v207=859 -(240 + (1330 -(530 + 181))) ;v203=(882 -(614 + 267)) + 1 ;end if (v203==0) then v204=v79[2 -0 ];v205,v206=v70(v77[v204](v77[v204 + 1 + 0 ]));v203=1;end if (v203==(1746 -(1344 + 400))) then for v340=v204,v72 do local v341=405 -(255 + 150) ;while true do if ((0 + 0)==v341) then v207=v207 + (33 -(19 + 13)) + 0 ;v77[v340]=v205[v207];break;end end end break;end end else local v208=v77[v79[16 -12 ]];if v208 then v71=v71 + (3 -2) ;else v77[v79[1741 -(404 + 1335) ]]=v208;v71=v79[409 -(183 + 223) ];end end elseif (v80<=47) then if (v80>(55 -9)) then if ((328==328) and (v79[2]==v77[v79[3 + 1 ]])) then v71=v71 + 1 ;else v71=v79[2 + 1 ];end else v77[v79[339 -(10 + 327) ]][v79[3 + (0 -0) ]]=v77[v79[4]];end elseif (v80<=(386 -(118 + 220))) then v77[v79[1 + 1 ]]=v77[v79[452 -(108 + 341) ]][v79[2 + 2 ]];elseif ((1511<3808) and (v80==(207 -158))) then v77[v79[(3483 -1988) -(711 + 782) ]]=v29(v68[v79[(14 -9) -2 ]],nil,v61);else v61[v79[472 -(270 + 199) ]]=v77[v79[1 + 1 ]];end elseif ((v80<=(1877 -(580 + 1239))) or (2510>4919)) then if (v80<=(160 -(28 + 78))) then if (v80<=(50 + 2)) then if (v80>51) then local v213=0 + 0 ;local v214;while true do if ((4763==4763) and (v213==(0 + (0 -0)))) then v214=v77[v79[9 -5 ]];if v214 then v71=v71 + 1 ;else local v360=0;while true do if ((4137>1848) and (v360==(0 + (0 -0)))) then v77[v79[1169 -(645 + 522) ]]=v214;v71=v79[1793 -(1010 + 780) ];break;end end end break;end end else v71=v79[3];end elseif (v80==(53 + 0)) then do return;end else local v216=v79[2];v77[v216](v13(v77,v216 + (4 -3) ,v79[8 -5 ]));end elseif (v80<=(1892 -(1045 + 791))) then if (v80==(139 -84)) then do return;end else v77[v79[2]]=v77[v79[4 -1 ]];end elseif ((2436<=3134) and (v80==(562 -(351 + 154)))) then local v219=1574 -(1281 + (2105 -(1293 + 519))) ;local v220;while true do if (v219==0) then v220=v79[268 -(28 + 238) ];v77[v220](v13(v77,v220 + (2 -1) ,v79[(3186 -1624) -((3605 -2224) + 178) ]));break;end end elseif (v77[v79[2 + (0 -0) ]]~=v79[4 + 0 ]) then v71=v71 + (4 -3) + 0 ;else v71=v79[10 -7 ];end elseif (v80<=(33 + 29)) then if (v80<=((1248 -718) -(381 + 89))) then if (v80>(53 + 6)) then local v221=0 + 0 ;local v222;while true do if (v221==(0 -(0 + 0))) then v222=v79[(237 + 921) -(1074 + 82) ];v77[v222]=v77[v222]();break;end end else local v223=v79[3 -1 ];local v224={v77[v223](v13(v77,v223 + (1456 -(990 + 465)) ,v72))};local v225=0 + 0 ;for v248=v223,v79[2 + 1 + 1 ] do v225=v225 + 1 + 0 + 0 ;v77[v248]=v224[v225];end end elseif ((3723==3723) and (v80>((1335 -(709 + 387)) -178))) then local v226=v79[1728 -(1668 + (1916 -(673 + 1185))) ];v77[v226](v77[v226 + ((1818 -1191) -(512 + 114)) ]);else local v227=v68[v79[7 -4 ]];local v228;local v229={};v228=v10({},{__index=function(v251,v252) local v253=0 -0 ;local v254;while true do if (v253==(0 -0)) then v254=v229[v252];return v254[1 + 0 ][v254[1 + 1 ]];end end end,__newindex=function(v255,v256,v257) local v258=v229[v256];v258[1 + 0 ][v258[6 -4 ]]=v257;end});for v260=1995 -(109 + 1885) ,v79[(1054 + 419) -(949 + 320 + (270 -70)) ] do local v261=0 -0 ;local v262;while true do if (v261==(815 -(98 + 717))) then v71=v71 + (827 -(802 + 24)) ;v262=v67[v71];v261=1 -0 ;end if ((1==v261) or (4046>=4316)) then if (v262[1 -0 ]==56) then v229[v260-(1 + 0) ]={v77,v262[1 + 2 ]};else v229[v260-(1 + 0) ]={v60,v262[2 + 1 ]};end v76[ #v76 + 1 + 0 ]=v229;break;end end end v77[v79[2 + 0 ]]=v29(v227,v228,v61);end elseif (v80<=(47 + 17)) then if (v80==63) then for v263=v79[1 + (1 -0) ],v79[1436 -(797 + 636) ] do v77[v263]=nil;end else for v265=v79[2],v79[14 -11 ] do v77[v265]=nil;end end elseif ((v80<=(1684 -(1427 + 192))) or (2008<1929)) then local v231=0 + 0 ;local v232;while true do if ((2384>1775) and (v231==(0 -0))) then v232=v79[2 + 0 ];v77[v232]=v77[v232](v13(v77,v232 + 1 + 0 ,v72));break;end end elseif (v80>(392 -(192 + 134))) then local v291=v79[2];v77[v291]=v77[v291](v13(v77,v291 + (1277 -(316 + 960)) ,v72));else local v293=v79[2];local v294={v77[v293](v13(v77,v293 + 1 + 0 ,v72))};local v295=0 + 0 ;for v319=v293,v79[15 -11 ] do v295=v295 + 1 ;v77[v319]=v294[v295];end end v71=v71 + (552 -(83 + 468)) ;break;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
