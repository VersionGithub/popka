--secure by moon sec V3
local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v81=v2(v0(v30,16));if v19 then local v86=v5(v81,v19);v19=nil;return v86;else return v81;end end end);local function v20(v31,v32,v33) if v33 then local v82=(v31/((5 -(3 -0))^(v32-(2 -1))))%((3 -1)^(((v33-(1 + 0)) -(v32-1)) + (2 -1))) ;return v82-(v82%(620 -(555 + 64))) ;else local v83=2^(v32-((1997 -(68 + 997)) -(857 + 74))) ;return (((v31%(v83 + v83))>=v83) and (1 + 0)) or (568 -(367 + 201)) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (1272 -(226 + 1044)) );v18=v18 + (8 -6) ;return (v36 * (373 -(32 + 85))) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + 3 + 0 );v18=v18 + 4 ;return (v40 * (3720433 + 13056783)) + (v39 * 65536) + (v38 * (1213 -(892 + 65))) + v37 ;end local function v24() local v41=0 -0 ;local v42;local v43;local v44;local v45;local v46;local v47;while true do if (v41==2) then v46=v20(v43,38 -17 ,31);v47=((v20(v43,58 -(45 -19) )==1) and  -(351 -((105 -(10 + 8)) + 263))) or (181 -(67 + 113)) ;v41=3 + (430 -(44 + 386)) ;end if (v41==((0 -0) -0)) then v42=v23();v43=v23();v41=1 + 0 ;end if (v41==(11 -(450 -(416 + 26)))) then if (v46==(952 -(802 + 150))) then if (v45==(0 -0)) then return v47 * ((1486 -(998 + 488)) -0) ;else v46=1 + 0 ;v44=0;end elseif (v46==(3044 -(915 + 27 + 55))) then return ((v45==(0 -0)) and (v47 * ((1 + 0)/0))) or (v47 * NaN) ;end return v8(v47,v46-(1344 -321) ) * (v44 + (v45/(((3796 -2607) -(1069 + 118))^(117 -(28 + 37))))) ;end if (v41==(1 -0)) then v44=1 + 0 ;v45=(v20(v43,1 -0 ,20 + 0 ) * (2^(823 -(368 + 423)))) + v42 ;v41=6 -4 ;end end end local function v25(v48) local v49;if  not v48 then v48=v23();if (v48==0) then return "";end end v49=v3(v16,v18,(v18 + v48) -(773 -(201 + 571)) );v18=v18 + v48 ;local v50={};for v64=1139 -(116 + 1022) , #v49 do v50[v64]=v2(v1(v3(v49,v64,v64)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return 0;end)();local v52=(function() return;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();while true do local v66=(function() return 0;end)();while true do if (v66~=(203 -(14 + 188))) then else if (v51==(677 -(534 + 141))) then for v97= #"}",v23() do local v98=(function() return v21();end)();if (v20(v98, #"{", #"\\")==(0 + 0)) then local v101=(function() return 0 + 0 ;end)();local v102=(function() return;end)();local v103=(function() return;end)();local v104=(function() return;end)();local v105=(function() return;end)();while true do if ((2 + 0)==v101) then while true do if (v102== #"asd") then if (v20(v104, #"19(", #"asd")== #",") then v105[ #"0313"]=(function() return v57[v105[ #"asd1"]];end)();end v52[v97]=(function() return v105;end)();break;end if (v102~=(3 -1)) then else local v113=(function() return 0;end)();local v114=(function() return;end)();while true do if (v113==0) then v114=(function() return 0;end)();while true do if (v114==(0 -0)) then if (v20(v104, #"!", #"[")~= #"\\") then else v105[2]=(function() return v57[v105[2]];end)();end if (v20(v104,2,5 -3 )== #",") then v105[ #"-19"]=(function() return v57[v105[ #"xnx"]];end)();end v114=(function() return 1;end)();end if ((1 + 0)~=v114) then else v102=(function() return  #"91(";end)();break;end end break;end end end if (v102==(0 + 0)) then local v115=(function() return 396 -(115 + 281) ;end)();local v116=(function() return;end)();while true do if (v115~=0) then else v116=(function() return 0;end)();while true do if (1==v116) then v102=(function() return  #"~";end)();break;end if (v116==0) then v103=(function() return v20(v98,2, #"asd");end)();v104=(function() return v20(v98, #"?id=",13 -7 );end)();v116=(function() return 1 + 0 ;end)();end end break;end end end if (v102~= #"}") then else local v117=(function() return 0;end)();while true do if (1~=v117) then else v102=(function() return 2;end)();break;end if ((0 -0)==v117) then v105=(function() return {v22(),v22(),nil,nil};end)();if (v103==(867 -(550 + 317))) then local v292=(function() return 0;end)();local v293=(function() return;end)();while true do if (v292~=0) then else v293=(function() return 0;end)();while true do if (v293~=0) then else v105[ #"asd"]=(function() return v22();end)();v105[ #"xnxx"]=(function() return v22();end)();break;end end break;end end elseif (v103== #"|") then v105[ #"asd"]=(function() return v23();end)();elseif (v103==(2 -0)) then v105[ #"91("]=(function() return v23() -((2 -0)^16) ;end)();elseif (v103~= #"xxx") then else local v352=(function() return 0 -0 ;end)();local v353=(function() return;end)();while true do if (v352~=(285 -(134 + 151))) then else v353=(function() return 1665 -(970 + 695) ;end)();while true do if (v353==0) then v105[ #"91("]=(function() return v23() -(2^16) ;end)();v105[ #"0836"]=(function() return v22();end)();break;end end break;end end end v117=(function() return 1 -0 ;end)();end end end end break;end if (v101~=1) then else v104=(function() return nil;end)();v105=(function() return nil;end)();v101=(function() return 2;end)();end if (v101==(1990 -(582 + 1408))) then local v106=(function() return 0 -0 ;end)();while true do if (v106~=0) then else v102=(function() return 0 -0 ;end)();v103=(function() return nil;end)();v106=(function() return 3 -2 ;end)();end if (v106~=(1825 -(1195 + 629))) then else v101=(function() return 1 -0 ;end)();break;end end end end end end for v99= #"<",v23() do v53[v99-#">" ]=(function() return v28();end)();end return v55;end break;end if ((241 -(187 + 54))==v66) then if ( #"["==v51) then local v93=(function() return 0;end)();local v94=(function() return;end)();while true do if (v93~=(780 -(162 + 618))) then else v94=(function() return 0 + 0 ;end)();while true do if (v94==(0 + 0)) then v56=(function() return v23();end)();v57=(function() return {};end)();v94=(function() return 1 -0 ;end)();end if (v94==(1 -0)) then for v108= #"}",v56 do local v109=(function() return 0;end)();local v110=(function() return;end)();local v111=(function() return;end)();while true do if (0==v109) then v110=(function() return v21();end)();v111=(function() return nil;end)();v109=(function() return 1 + 0 ;end)();end if (v109==(1637 -(1373 + 263))) then if (v110== #">") then v111=(function() return v21()~=(1000 -(451 + 549)) ;end)();elseif (v110==2) then v111=(function() return v24();end)();elseif (v110~= #"19(") then else v111=(function() return v25();end)();end v57[v108]=(function() return v111;end)();break;end end end v55[ #"91("]=(function() return v21();end)();v94=(function() return 1 + 1 ;end)();end if (v94==(2 -0)) then v51=(function() return 2;end)();break;end end break;end end end if (v51==(0 -0)) then local v95=(function() return 1384 -(746 + 638) ;end)();local v96=(function() return;end)();while true do if (v95~=(0 + 0)) then else v96=(function() return 0;end)();while true do if (v96==1) then v54=(function() return {};end)();v55=(function() return {v52,v53,nil,v54};end)();v96=(function() return 2 -0 ;end)();end if (v96==(341 -(218 + 123))) then v52=(function() return {};end)();v53=(function() return {};end)();v96=(function() return 1582 -(1535 + 46) ;end)();end if (2==v96) then v51=(function() return  #"~";end)();break;end end break;end end end v66=(function() return 1;end)();end end end end local function v29(v58,v59,v60) local v61=v58[1 + 0 ];local v62=v58[1 + 1 ];local v63=v58[3];return function(...) local v67=v61;local v68=v62;local v69=v63;local v70=v27;local v71=561 -(306 + (1747 -(711 + 782))) ;local v72= -(1 -0);local v73={};local v74={...};local v75=v12("#",...) -1 ;local v76={};local v77={};for v84=0 + 0 ,v75 do if ((v84>=v69) or (4046<1291)) then v73[v84-v69 ]=v74[v84 + (1 -0) ];else v77[v84]=v74[v84 + (1468 -(899 + 568)) ];end end local v78=(v75-v69) + 1 + 0 ;local v79;local v80;while true do local v85=0 -0 ;while true do if (v85==(603 -(268 + 335))) then v79=v67[v71];v80=v79[1];v85=1;end if ((1892<2734) and (v85==(291 -(60 + 230)))) then if ((1923<2218) and (v80<=(604 -((895 -(270 + 199)) + 146)))) then if ((2173>379) and (v80<=(2 + 5 + 8))) then if ((v80<=7) or (4241==3545)) then if ((v80<=(1459 -(282 + 1174))) or (2591==3409)) then if ((v80<=(812 -(569 + 242))) or (4048>4232)) then if ((4514>3324) and (v80>(0 -0))) then v77[v79[2]]=v77[v79[1 + 2 ]];else v77[v79[2]]=v79[1027 -(706 + 318) ]~=(1251 -(721 + 530)) ;end elseif (v80==(1273 -(945 + 326))) then do return;end else local v123=0 -0 ;local v124;while true do if (((0 + 0)==v123) or (208>=4828)) then v124=v79[702 -(271 + 429) ];v77[v124]=v77[v124]();break;end end end elseif ((v80<=(5 + 0)) or (1750>=3473)) then if ((3166==3166) and (v80==4)) then v77[v79[1502 -(1408 + 92) ]]=v60[v79[3]];else v77[v79[1088 -((2280 -(580 + 1239)) + 625) ]]=v77[v79[(3837 -2546) -(993 + 295) ]][v79[1 + 3 ]];end elseif ((1763<3724) and (v80==(1177 -(418 + 753)))) then v77[v79[1 + 1 ]]={};else v77[v79[1 + 1 ]][v79[1 + 2 ]]=v79[2 + 2 + 0 ];end elseif ((57<=2723) and (v80<=(540 -(15 + 391 + 54 + 69)))) then if (v80<=(1778 -(1749 + 20))) then if ((v80>(2 + (15 -9))) or (1583>3567) or (2070==443)) then if (v77[v79[2]]~=v79[1326 -(1249 + 73) ]) then v71=v71 + 1 + 0 ;else v71=v79[1148 -(466 + 679) ];end else local v132=v79[4 -2 ];v77[v132](v13(v77,v132 + (2 -1) ,v79[1903 -(106 + 1115 + 679) ]));end elseif ((v80>10) or (2705==1393)) then local v133=v79[1 + 1 ];v77[v133]=v77[v133]();else local v135=v79[1 + 1 ];local v136={v77[v135](v13(v77,v135 + 1 ,v72))};local v137=1167 -(645 + 522) ;for v233=v135,v79[10 -6 ] do v137=v137 + 1 ;v77[v233]=v136[v137];end end elseif (v80<=(127 -(4 + 110))) then if ((v80>12) or (4601<61)) then local v138=v77[v79[1794 -(1010 + 780) ]];if (v138 or (1390>=4744)) then v71=v71 + (585 -(57 + 527)) ;else v77[v79[2 + 0 ]]=v138;v71=v79[1430 -(41 + 1386) ];end else v77[v79[105 -(17 + 86) ]]=v77[v79[3 + 0 ]][v79[8 -4 ]];end elseif ((v80==14) or (2003>3834)) then v77[v79[5 -3 ]]=v79[169 -((581 -459) + 44) ];else for v236=v79[2 -0 ],v79[9 -(17 -11) ] do v77[v236]=nil;end end elseif ((v80<=((1855 -(1045 + 791)) + 4)) or (156>3913)) then if ((v80<=(3 + 16)) or (1313==794)) then if ((3174>2902) and (v80<=(33 -16))) then if ((195==195) and (v80==(81 -(30 + 35)))) then local v143=v79[4 -2 ];local v144=v79[4];local v145=v143 + 2 + 0 ;local v146={v77[v143](v77[v143 + (3 -2) ],v77[v145])};for v238=1,v144 do v77[v145 + v238 ]=v146[v238];end local v147=v146[1];if v147 then local v277=1212 -(323 + 889) ;while true do if (v277==(0 -0)) then v77[v145]=v147;v71=v79[583 -(361 + 219) ];break;end end else v71=v71 + 1 ;end elseif v77[v79[2]] then v71=v71 + (321 -(53 + 267)) ;else v71=v79[1 + 2 ];end elseif (v80>18) then v60[v79[416 -(15 + 398) ]]=v77[v79[984 -(18 + (1471 -507)) ]];else v71=v79[11 -(513 -(351 + 154)) ];end elseif ((3105>=1796) and (v80<=(13 + 8))) then if (v80>((1587 -(1281 + 293)) + 7)) then local v151=(1116 -(28 + 238)) -(20 + 830) ;local v152;while true do if (v151==0) then v152=v79[2];v77[v152](v13(v77,v152 + 1 + 0 ,v79[129 -(116 + 10) ]));break;end end else v71=v79[(2 -1) + 2 ];end elseif (v80==22) then local v154=v79[740 -(542 + 196) ];v77[v154](v77[v154 + (1 -0) ]);else local v155=0 + 0 ;local v156;local v157;while true do if (v155==(1 + 0)) then for v305=(1560 -(1381 + 178)) + 0 , #v76 do local v306=0 -0 ;local v307;while true do if (v306==0) then v307=v76[v305];for v345=0 -0 , #v307 do local v346=1551 -(1126 + 425) ;local v347;local v348;local v349;while true do if (v346==(406 -(118 + 287))) then v349=v347[2];if ((v348==v77) and (v349>=v156)) then v157[v349]=v348[v349];v347[3 -2 ]=v157;end break;end if (v346==((1052 + 69) -(118 + 1003))) then v347=v307[v345];v348=v347[1];v346=2 -1 ;end end end break;end end end break;end if (v155==(377 -(142 + 235))) then v156=v79[2];v157={};v155=1;end end end elseif (v80<=(122 -95)) then if ((4120<=4260) and (v80<=(6 + 19))) then if ((4379>=2131) and (v80>24)) then if (v77[v79[979 -(553 + 424) ]] or (883>4778)) then v71=v71 + (1 -0) ;else v71=v79[3 + 0 ];end else local v158=v79[2];local v159,v160=v70(v77[v158](v13(v77,v158 + 1 + 0 ,v79[2 + 1 ])));v72=(v160 + v158) -(1 + 0) ;local v161=0;for v241=v158,v72 do v161=v161 + 1 + 0 ;v77[v241]=v159[v161];end end elseif ((v80>(56 -(25 + 5))) or (3620>=4891)) then local v162=v79[5 -3 ];v77[v162]=v77[v162](v13(v77,v162 + ((1 + 1) -1) ,v79[3]));else v77[v79[1 + 1 ]][v79[14 -11 ]]=v77[v79[757 -(239 + 514) ]];end elseif ((3844>=2043) and (v80<=(11 + (61 -43)))) then if (v80>(1357 -(797 + 532))) then if  not v77[v79[2]] then v71=v71 + 1 + 0 + 0 ;else v71=v79[2 + 1 ];end elseif ((4258>937) and (v77[v79[4 -2 ]]==v79[1206 -(373 + 829) ])) then v71=v71 + (732 -(476 + (725 -(381 + 89)))) ;else v71=v79[1133 -(369 + 761) ];end elseif (v80<=(16 + 2 + 12)) then local v166=v79[2];local v167={};for v244=1 -(0 + 0) , #v76 do local v245=0 -0 ;local v246;while true do if ((v245==(238 -(64 + 174))) or (3232<=2731)) then v246=v76[v244];for v329=0, #v246 do local v330=v246[v329];local v331=v330[1];local v332=v330[1 + 1 ];if ((v331==v77) and (v332>=v166)) then local v343=0;while true do if ((4905==4905) and (v343==(0 -0))) then v167[v332]=v331[v332];v330[1 -0 ]=v167;break;end end end end break;end end end elseif (v80==(367 -(144 + 192))) then v77[v79[218 -(42 + 174) ]]=v29(v68[v79[3 + 0 ]],nil,v60);else v77[v79[2 + 0 ]]=v29(v68[v79[2 + 1 ]],nil,v60);end elseif ((v80<=(1552 -(363 + 1141))) or (4136>=4411)) then if (v80<=40) then if ((v80<=(1616 -(1183 + 397))) or (2958==4017)) then if ((1228>=813) and ((v80<=34) or (4869<906))) then if ((v80>33) or (1225>4228)) then v77[v79[2]][v79[8 -5 ]]=v77[v79[(1159 -(1074 + 82)) + 1 ]];elseif ((3328>2238) and (v77[v79[2 + 0 ]]~=v79[1979 -(1913 + 62) ])) then v71=v71 + 1 + 0 ;else v71=v79[7 -4 ];end elseif ((v80==(1968 -(565 + 1368))) or (3455>4050)) then local v170=v68[v79[3]];local v171;local v172={};v171=v10({},{__index=function(v247,v248) local v249=0 -0 ;local v250;while true do if (v249==(1661 -(1477 + 184))) then v250=v172[v248];return v250[1 -0 ][v250[2]];end end end,__newindex=function(v251,v252,v253) local v254=v172[v252];v254[1 + 0 ][v254[2]]=v253;end});for v256=857 -((1235 -671) + 292) ,v79[6 -2 ] do v71=v71 + (2 -(1785 -(214 + 1570))) ;local v257=v67[v71];if ((243==243) and (v257[305 -(244 + 60) ]==(34 + 9))) then v172[v256-(477 -(41 + 435)) ]={v77,v257[1128 -(936 + 189) ]};else v172[v256-(1 + 0) ]={v59,v257[2 + 1 ]};end v76[ #v76 + (1139 -(782 + 356)) ]=v172;end v77[v79[269 -(176 + 91) ]]=v29(v170,v171,v60);else local v174=0 -0 ;local v175;while true do if ((3839>1405) and (v174==(0 + 0))) then v175=v77[v79[4]];if (v175 or (271>1572)) then v71=v71 + (1 -0) ;else v77[v79[(1064 + 30) -(975 + (460 -343)) ]]=v175;v71=v79[1878 -(157 + 1718) ];end break;end end end elseif ((v80<=38) or (1293<=507)) then if (v80==(31 + 6)) then local v176=v79[6 -(1730 -(1668 + 58)) ];v77[v176]=v77[v176](v13(v77,v176 + (3 -2) ,v72));else local v178=1018 -(697 + 321) ;local v179;while true do if ((2739<3293) and (v178==(0 -0))) then v179=v79[2];v77[v179]=v77[v179](v13(v77,v179 + (1 -0) ,v72));break;end end end elseif (v80==(89 -50)) then v77[v79[1 + 1 ]]=v60[v79[3]];else for v259=v79[3 -1 ],v79[7 -(630 -(512 + 114)) ] do v77[v259]=nil;end end elseif (v80<=44) then if (v80<=42) then if ((v80==(1268 -(322 + (2359 -1454)))) or (2896<805) or (3942<1134)) then v77[v79[613 -(602 + 9) ]][v79[1192 -((927 -478) + 740) ]]=v79[876 -(826 + 46) ];else v77[v79[949 -(245 + 702) ]]=v79[9 -6 ];end elseif ((2316==2316) and (v80==(14 + 29))) then v77[v79[1900 -(260 + 1638) ]]=v77[v79[443 -(382 + 58) ]];else local v188=v79[6 -4 ];local v189=v77[v79[3 + (0 -0) ]];v77[v188 + (1 -0) ]=v189;v77[v188]=v189[v79[11 -7 ]];end elseif (v80<=(1251 -(902 + 303))) then if (v80==(98 -53)) then local v193=v79[4 -2 ];local v194=v77[v79[3]];v77[v193 + 1 + 0 + 0 ]=v194;v77[v193]=v194[v79[1694 -(1121 + 107 + 462) ]];else local v198=v79[216 -(20 + 2 + 192) ];local v199,v200=v70(v77[v198](v77[v198 + (684 -(483 + 200)) ]));v72=(v200 + v198) -(1464 -(1404 + 59)) ;local v201=0;for v261=v198,v72 do v201=v201 + ((6 -4) -1) ;v77[v261]=v199[v201];end end elseif ((v80>(62 -15)) or (2693==4973)) then local v202=v79[767 -(468 + 297) ];v77[v202](v77[v202 + 1 ]);else v77[v79[1996 -(109 + 1885) ]]=v79[565 -(334 + (1697 -(1269 + 200))) ]~=(0 -0) ;end elseif ((2146==2146) and (v80<=(129 -(139 -66)))) then if (v80<=(93 -41)) then if ((v80<=50) or (2244==3224)) then if ((v80==(864 -(98 + 717))) or (2570==1533)) then local v204=v79[1 + 1 ];local v205=v79[240 -(141 + 95) ];local v206=v204 + 2 + 0 ;local v207={v77[v204](v77[v204 + (2 -1) ],v77[v206])};for v264=1 + 0 ,v205 do v77[v206 + v264 ]=v207[v264];end local v208=v207[1];if v208 then local v285=(826 -(802 + 24)) -0 ;while true do if ((0 + 0)==v285) then v77[v206]=v208;v71=v79[2 + 1 ];break;end end else v71=v71 + (1 -0) ;end else local v209=v79[2 + 0 ];local v210,v211=v70(v77[v209](v13(v77,v209 + (164 -(92 + 71)) ,v79[3])));v72=(v211 + v209) -((1 -0) + 0) ;local v212=0 -0 ;for v267=v209,v72 do v212=v212 + (1 -0) ;v77[v267]=v210[v212];end end elseif ((v80==51) or (4904<=1916)) then v77[v79[767 -(574 + 191) ]]=v59[v79[3 + 0 ]];else v59[v79[1 + 2 ]]=v77[v79[4 -2 ]];end elseif ((v80<=(28 + 26)) or (883==1460)) then if ((90<=1065) and (v80>(902 -(254 + 595)))) then do return;end else v59[v79[129 -(55 + 71) ]]=v77[v79[(2 + 0) -0 ]];end elseif ((4802==4802) and ((v80==((304 + 1541) -(573 + 263 + 954))) or (4619<=999))) then v77[v79[5 -3 ]]={};else v77[v79[1 + 1 ]]();end elseif ((v80<=60) or (3410>4116)) then if ((v80<=58) or (903>=3059) or (2280<=511)) then if (v80==(91 -(94 -60))) then local v220=v79[941 -(714 + 225) ];local v221,v222=v70(v77[v220](v77[v220 + 1 ]));v72=(v222 + v220) -(2 -1) ;local v223=0;for v270=v220,v72 do local v271=0 -(0 -0) ;while true do if (0==v271) then v223=v223 + 1 + 0 + 0 ;v77[v270]=v221[v223];break;end end end else local v224=v79[2 -0 ];v77[v224]=v77[v224](v13(v77,v224 + 1 ,v79[809 -(118 + 688) ]));end elseif (v80==59) then if (v77[v79[50 -(25 + 23) ]]==v79[1 + 2 + 1 ]) then v71=v71 + (1887 -(927 + 959)) ;else v71=v79[3];end elseif  not v77[v79[2]] then v71=v71 + (3 -2) ;else v71=v79[735 -(16 + 716) ];end elseif (v80<=(119 -57)) then if (v80>61) then local v226=v79[99 -(11 + 86) ];local v227={v77[v226](v13(v77,v226 + (286 -(175 + 110)) ,v72))};local v228=0 -0 ;for v272=v226,v79[19 -15 ] do local v273=1796 -(503 + 1293) ;while true do if (v273==(0 -0)) then v228=v228 + 1 + 0 + 0 ;v77[v272]=v227[v228];break;end end end else v77[v79[1063 -(810 + 251) ]]();end elseif ((v80<=(44 + 19)) or (3976<2857) or (1676<=463)) then local v229=0 + 0 ;local v230;local v231;local v232;while true do if (v229==(1 + 0)) then v232={};v231=v10({},{__index=function(v314,v315) local v316=533 -(43 + 490) ;local v317;while true do if (v316==0) then v317=v232[v315];return v317[734 -(711 + 22) ][v317[7 -5 ]];end end end,__newindex=function(v318,v319,v320) local v321=v232[v319];v321[860 -(240 + 619) ][v321[2]]=v320;end});v229=1 + 1 ;end if ((3869==3869) and (4930>2307) and (v229==(2 -0))) then for v323=1 + 0 + 0 ,v79[4] do v71=v71 + (1745 -(1344 + 400)) ;local v324=v67[v71];if (v324[406 -((1688 -(797 + 636)) + 150) ]==((165 -131) + 9)) then v232[v323-(1 + 0) ]={v77,v324[1742 -(404 + 1335) ]};else v232[v323-1 ]={v59,v324[2 + 1 ]};end v76[ #v76 + 1 + 0 ]=v232;end v77[v79[2]]=v29(v230,v231,v60);break;end if (v229==0) then v230=v68[v79[340 -(10 + 327) ]];v231=nil;v229=1 + 0 ;end end elseif ((1158<=2613) and (v80==(402 -(118 + 220)))) then v77[v79[1 + 1 ]]=v59[v79[3]];else v60[v79[452 -(108 + 341) ]]=v77[v79[1 + 1 ]];end v71=v71 + (4 -(6 -3)) ;break;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
